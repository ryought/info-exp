(define (ack m n)
  (cond ((= m 0) (+ n 1))
        ((= m 1) (+ n 2))
        ((= m 2) (+ 3 (* n 2)))
        ((= m 3) (+ 5 (* 8 (- (expt 2 n) 1))))
        (else (cond ((= n 0) (ack (- m 1) 1))
                 (else (ack (- m 1) (ack m (- n 1))))
                 ))
        ))
