108bをといた。
以下のアセンブリプログラムを作った
$ cat 108b.s
	# 定数のデータ
	.section ".rodata"
	.align 3
fzero:
	.double 0.0
fone:
	.double 1.0

	# プログラム領域
	.section ".text"
	.globl saturate
	.align 2
saturate:
	# 0.0を%f2にロード
	addis %r3, %r2, fzero@toc@ha
	addi %r3, %r3, fzero@toc@l
	lfd %f2, 0(%r3)

	# 1.0を%f3にロード
	addis %r3, %r2, fone@toc@ha
	addi %r3, %r3, fone@toc@l
	lfd %f3, 0(%r3)
	# 0.0以下ならば飛ぶ、nanだったらそのまま
	fcmpu %cr0, %f1, %f2
	bunlr
	ble under_zero
	# 1.0以上ならば飛ぶ
	fcmpu %cr0, %f1, %f3
	bge over_one
	# その間だったらそのまま返す
	blr
under_zero:
	fmr %f1, %f2
	blr
over_one:
	fmr %f1, %f3
	blr


それの動作を確かめるCプログラムは以下。


$ cat 108b.c
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

double saturate(double x);

int main() {
  printf("%f\n", saturate(-3.4));
  printf("%f\n", saturate(0.375));
  printf("%f\n", saturate(1.5));
  printf("%d\n", signbit(saturate(-5.78)));
  printf("%d\n", signbit(saturate(-0.0)));
  printf("%f\n", saturate(-INFINITY));
  printf("%f\n", saturate(INFINITY));
  printf("%d\n", isnan(saturate(NAN)));
  return 0;
}

これを以下のコマンドでコンパイル、リンクして実行する。

$ gcc -Wall 108b.c 108b.s -o out
$ ./out
0.000000
0.375000
1.000000
0
0
0.000000
1.000000
1

