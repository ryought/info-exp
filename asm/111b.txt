111bをといた
インラインアセンブリを使って128bit符号なし整数の加算を実装した

いかのCのプログラムを作った

#include <stdio.h>


typedef struct myuint128 {
  unsigned long digit0;
  unsigned long digit1;
} myuint128_t;


myuint128_t add128(myuint128_t a, myuint128_t b) {
  unsigned long digit0, digit1;

  __asm__(
          "addc %0, %1, %2" : "=r"(digit0) : "r"(a.digit0), "r"(b.digit0) : "ca"
          );
  __asm__(
          "adde %0, %1, %2" : "=r"(digit1) : "r"(a.digit1), "r"(b.digit1) : "ca"
          );
  return (myuint128_t){digit0, digit1};
}


int main() {
  myuint128_t r;
  r = add128((myuint128_t){0xA05F44019BD79748UL, 0x0000000000003995UL},
             (myuint128_t){0x7B6F88EC052868B8UL, 0x0000000000009A2CUL});
  printf("0x%016lx%016lx\n", r.digit1, r.digit0);

  r = add128((myuint128_t){0xBEAED78ACDC6F714UL, 0x1934D10F478850D4UL},
             (myuint128_t){0xE69D35AFE6995719UL, 0x0805961D75476A77UL});
  printf("0x%016lx%016lx\n", r.digit1, r.digit0);

  r = add128((myuint128_t){0xD97482C3148C06ADUL, 0x81981582D4ED6486UL},
             (myuint128_t){0xEFBBAA3E5DD5089FUL, 0x8FE78CB9DAD947E9UL});
  printf("0x%016lx%016lx\n", r.digit1, r.digit0);
  return 0;
}


これを実行する

$ gcc -Wall 111b.c -o main
$ ./main
0x000000000000d3c21bcecceda1000000
0x213a672cbccfbb4ca54c0d3ab4604e2d
0x117fa23cafc6ac70c9302d0172610f4c

これは回答例と一致する。
